syntax = "proto3";

package opebtree;

// GET: Server requests
message GetCallback {
    oneof callback {
        // sends found value to client
        GetValue value = 1;

        // ask index of search key in branch
        AskNextChildIndex next_child_idx = 10;
        // ask index of search key in leaf
        AskSubmitLeaf submit_leaf = 11;

        // sends server error to client
        Error server_error = 20;
    }
}

// GET: Client replies
message GetCallbackReply {
    oneof reply {
        // client sends database info (id and version)
        DbInfo db_info = 1;

        // client sends results of searching a key in the leaf
        ReplyNextChildIndex next_child_idx = 10;
        // client sends results of searching a key in the leaf
        ReplySubmitLeaf submit_leaf = 11;

        // client sends client error to server
        Error server_error = 20;
    }

}

// PUT: Server requests
message PutCallback {
    oneof callback {
        // server sends previous stored value to client
        PreviousValue value = 1;

        // server asks index of search key in branch
        AskNextChildIndex next_child_idx = 10;

        // server asks index of search key in leaf and other details for putting
        AskPutDetails put_details = 20;
        // server asks verify made changes
        AskVerifyChanges verify_changes = 21;
        // server confirms that all changes was persisted
        AskChangesStored changes_stored = 22;

        // server sends server error to client
        Error server_error = 30;
    }
}

// PUT: Client replies
message PutCallbackReply {
    oneof reply {
        // Initial (first) message in a client-server round trip.
        // client sends database info (id and version)
        DbInfo db_info = 1;
        // client sends value for putting
        PutValue value = 2;

        // client sends index of search key in branch
        ReplyNextChildIndex next_child_idx = 10;

        // client sends index of search key in leaf and other details for putting
        ReplyPutDetails put_details = 20;
        // client confirms made changes
        ReplyVerifyChanges verify_changes = 21;
        // client confirms server confirmation
        ReplyChangesStored changes_stored = 22;

        // client sends client error to server
        Error server_error = 30;
    }
}


message DbInfo {
    // database id
    bytes id = 1;
    // expected database version
    int64 version = 2;
}

//
// BtreeCallback commands
//
message AskNextChildIndex {
    repeated bytes keys = 1;
    repeated bytes children_checksums = 2;
}

message ReplyNextChildIndex {
    uint32 index = 1;
}

//
// SearchCallback commands
//
message AskSubmitLeaf {
    repeated bytes keys = 1;
    repeated bytes values_checksums = 2;
}

message ReplySubmitLeaf {
    oneof searchResult {
        int32 found = 1;
        int32 insertion_point = 2;
    }
}

message GetValue {
    optional bytes value = 1;
}

message Error {
    string code = 1;
    string description = 2;
}

//
// PutCallbacks commands
//
message AskPutDetails {
    repeated bytes keys = 1;
    repeated bytes values_checksums = 2;
}

message ReplyPutDetails {
    bytes key = 1;
    bytes checksum = 2;

    oneof searchResult {
        int32 found = 3;
        int32 insertion_point = 4;
    }
}

message AskVerifyChanges {
    bytes server_merkle_root = 1;
    bool was_split = 2;
}

message ReplyVerifyChanges {
    // Signed version + serverMerkleRoot
    bytes signature = 1;
}

message AskChangesStored {}
message ReplyChangesStored {}

message PreviousValue {
    optional bytes value = 1;
}

message PutValue {
    bytes value = 1;
}
